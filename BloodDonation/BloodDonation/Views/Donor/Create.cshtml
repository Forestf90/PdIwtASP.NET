@model BloodDonation.PagedLists.DonorPagedList

@{
    ViewData["Title"] = "Create";
}

<h2>Create</h2>

<h4>Donor</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Donor.FirstName" class="control-label"></label>
                <input asp-for="Donor.FirstName" class="form-control" />
                <span asp-validation-for="Donor.FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Donor.LastName" class="control-label"></label>
                <input asp-for="Donor.LastName" class="form-control" />
                <span asp-validation-for="Donor.LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Donor.Pesel" class="control-label"></label>
                <input asp-for="Donor.Pesel" class="form-control" />
                <span asp-validation-for="Donor.Pesel" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Donor.Gender" class="control-label"></label><br>
                @foreach (var gen in ViewBag.Gender)
                {
                    <label><input asp-for="Donor.Gender" value="@gen.Value" type="radio" /> @gen.Text</label><br>
                }
                <span asp-validation-for="Donor.Gender" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Donor.BloodGroup" class="control-label"></label>
                <select asp-for="Donor.BloodGroup" asp-items="ViewBag.BloodGroup" class="form-control"></select>
                <span asp-validation-for="Donor.BloodGroup" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Donor.Rh" class="control-label"></label><br>
                @foreach (var r in ViewBag.BloodRh)
                {
                    <label><input asp-for="Donor.Rh" value="@r.Value" type="radio" /> @r.Text</label><br>
                }
                <span asp-validation-for="Donor.Rh" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>
@if (ViewData["DonorCreate"] != null)
{
    @if (!(bool)ViewData["DonorCreate"])
    {
        <div class="alert alert-danger" role="alert">Osoba z takim peselem istnieje juz w bazie</div>
    }
    else if ((bool)ViewData["DonorCreate"])
    {
        <div class="alert alert-success" role="alert">Dawca dodany!</div>
    }
}


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


@await Component.InvokeAsync("Donor", new { donorList = Model })


@{
    var prevDisabled = Model.CurrentPage < 2 ? "disabled" : "";
    var nextDisabled = Model.CurrentPage == Model.TotalPages ? "disabled" : "";

    int startI = Model.CurrentPage - 5;
    //int itemsOnPage = 10;
}



<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <li class="page-item">
            <a href="@Url.Action("Create", new { page = Model.CurrentPage - 1 ,Model.ItemsOnPage })"
               class="btn btn-default @prevDisabled">
                Previous
            </a>
        </li>
        @if (startI < 2)
        {
            startI = 1;
        }
        else
        {
            <li class="page-item">
                <a href="@Url.Action("Create", new { page = 1 ,Model.ItemsOnPage })" class="page-link" tabindex="-1">1</a>
            </li>
            @if (Model.CurrentPage > 7)
            {

                <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1">...</a>
                </li>

            }

        }


        @for (int i = startI; i <= Model.TotalPages; i++)
        {
            if (Model.CurrentPage == i)
            {
                <li class="page-item active"><a class="page-link" href="@Url.Action("Create", new { page = i ,Model.ItemsOnPage})">@i</a></li>
            }
            else if (i == startI + 11)
            {
                @if (Model.TotalPages - Model.CurrentPage > 6)
                {

                    <li class="page-item disabled">
                        <a class="page-link" href="#" tabindex="-1">...</a>
                    </li>

                }
                if (startI + 10 < Model.TotalPages)
                {
                    <li class="page-item ">
                        <a href="@Url.Action("Create", new { page = Model.TotalPages ,Model.ItemsOnPage })" class="page-link" tabindex="-1">@Model.TotalPages</a>
                    </li>
                }

                break;
            }
            else
            {
                <li class="page-item"><a class="page-link" href="@Url.Action("Create", new { page = i ,Model.ItemsOnPage })">@i</a></li>
            }
        }

        <li class="page-item">
            <a href="@Url.Action("Create", new { page = Model.CurrentPage + 1 ,Model.ItemsOnPage })"
               class="btn btn-default @nextDisabled">
                Next
            </a>
        </li>
    </ul>
</nav>

<!-- Single button -->
<div class="btn-group">
    <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Donors on page <span class="caret"></span>
    </button>
    <ul class="dropdown-menu">
        <li><a asp-action="Create" asp-route-itemsOnPage="5">5</a></li>
        <li><a asp-action="Create" asp-route-itemsOnPage="10">10</a></li>
        <li><a asp-action="Create" asp-route-itemsOnPage="15">15</a></li>
        <li><a asp-action="Create" asp-route-itemsOnPage="20">20</a></li>
    </ul>
</div>

