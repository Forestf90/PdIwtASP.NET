@model BloodDonation.PagedLists.DonationPagedList

@{
    ViewData["Title"] = "Create";
}

<h4>Donacja</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="DonationCreate.Pesel" class="control-label"></label><br>
                <select asp-for="DonationCreate.Pesel" class="selectpicker" data-live-search="true">
                    @foreach (var p in ViewBag.Pesels)
                    {
                        <option>@p</option>
                    }
                </select><br>
                <span>Jeśli to pierwsza dotacja <a asp-action="Create" asp-controller="Donor">dodaj dawce</a></span>
                <span asp-validation-for="DonationCreate.Pesel" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Typ donacji</label>
                @*<label asp-for="DonationCreate.DonationType" class="control-label"></label>*@
                <select asp-for="DonationCreate.DonationType" asp-items="ViewBag.DonationType" class="form-control"></select>
                <span asp-validation-for="DonationCreate.DonationType" class="text-danger"></span>
            </div>
            <div class="form-group">
                @*<label asp-for="DonationCreate.Amount" class="control-label"></label>*@
                <label class="control-label">Ilość [ml]</label>
                <input asp-for="DonationCreate.Amount" class="form-control" />
                <span asp-validation-for="DonationCreate.Amount" class="text-danger"></span>
            </div>
            @*<div class="form-group">
            <label asp-for="Donation.Date" class="control-label"></label>
            <input asp-for="Donation.Date" type="date" asp-format="{0:yyyy-MM-dd}" class="form-control" />
            <span asp-validation-for="Donation.Date" class="text-danger"></span>
        </div>*@
            <div class="form-group">
                <input type="submit" value="Dodaj" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

@if (!String.IsNullOrEmpty((string)ViewData["DonationCreate"]))
{
    @if ((string)ViewData["DonationCreate"] == "ok")
    {
        <div class="alert alert-success" role="alert">Dotacja dodana!</div>
    }
    else
    {
        <div class="alert alert-danger" role="alert">@ViewData["DonationCreate"]</div>
    }
}
<div>
    <a asp-action="Index">Wróć do listy</a>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


@await Component.InvokeAsync("Donation", new { donationList = Model })



@{
    var prevDisabled = Model.CurrentPage < 2 ? "disabled" : "";
    var nextDisabled = Model.CurrentPage == Model.TotalPages ? "disabled" : "";

    int startI = Model.CurrentPage - 5;
    //int itemsOnPage = 10;
}



<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <li class="page-item">
            <a href="@Url.Action("Create", new { page = Model.CurrentPage - 1 ,Model.ItemsOnPage })"
               class="btn btn-default @prevDisabled">
                Previous
            </a>
        </li>
        @if (startI < 2)
        {
            startI = 1;
        }
        else
        {
            <li class="page-item">
                <a href="@Url.Action("Create", new { page = 1 ,Model.ItemsOnPage })" class="page-link" tabindex="-1">1</a>
            </li>
            @if (Model.CurrentPage > 7)
            {

                <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1">...</a>
                </li>

            }

        }


        @for (int i = startI; i <= Model.TotalPages; i++)
        {
            if (Model.CurrentPage == i)
            {
                <li class="page-item active"><a class="page-link" href="@Url.Action("Create", new { page = i ,Model.ItemsOnPage})">@i</a></li>
            }
            else if (i == startI + 11)
            {
                @if (Model.TotalPages - Model.CurrentPage > 6)
                {

                    <li class="page-item disabled">
                        <a class="page-link" href="#" tabindex="-1">...</a>
                    </li>

                }
                if (startI + 10 < Model.TotalPages)
                {
                    <li class="page-item ">
                        <a href="@Url.Action("Create", new { page = Model.TotalPages ,Model.ItemsOnPage })" class="page-link" tabindex="-1">@Model.TotalPages</a>
                    </li>
                }

                break;
            }
            else
            {
                <li class="page-item"><a class="page-link" href="@Url.Action("Create", new { page = i ,Model.ItemsOnPage })">@i</a></li>
            }
        }

        <li class="page-item">
            <a href="@Url.Action("Create", new { page = Model.CurrentPage + 1 ,Model.ItemsOnPage })"
               class="btn btn-default @nextDisabled">
                Next
            </a>
        </li>
    </ul>
</nav>

<!-- Single button -->
<div class="btn-group">
    <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Donations on page <span class="caret"></span>
    </button>
    <ul class="dropdown-menu">
        <li><a asp-action="Create" asp-route-itemsOnPage="5">5</a></li>
        <li><a asp-action="Create" asp-route-itemsOnPage="10">10</a></li>
        <li><a asp-action="Create" asp-route-itemsOnPage="15">15</a></li>
        <li><a asp-action="Create" asp-route-itemsOnPage="20">20</a></li>
    </ul>
</div>